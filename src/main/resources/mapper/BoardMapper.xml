<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.boardbackend.repository.board.board.BoardRepository">

     <insert id="insertBoard" useGeneratedKeys="true" keyProperty="idx">
            INSERT INTO stn_boards (title, article, writer, password, email, isNotice, isPrivate, replyIdx)
            VALUES (#{title}, #{article}, #{writer}, #{password}, #{email}, #{isNotice}, #{isPrivate}, #{replyIdx})
    </insert>

    <insert id="insertFileName">
        INSERT INTO stn_files (boardIdx, fileName)
        VALUES (#{boardIdx}, #{fileName})
    </insert>

    <select id="getBoards">
        WITH RECURSIVE cte AS (
            SELECT 1 AS lv,
                hh.idx,
                hh.title,
                hh.article,
                hh.email,
                hh.writer,
                hh.replyIdx,
                hh.isNotice,
                hh.isPrivate,
                hh.createAt,
                hh.boardView,
                CONCAT(hh.createAt, '|', CAST(hh.idx AS CHAR(99)) ) AS x
            FROM
                stn_boards hh
            WHERE
                hh.replyIdx IS NULL AND hh.isNotice = 0
            UNION ALL
            SELECT b.lv + 1 AS lv,
                p.idx,
                p.title,
                p.article,
                p.email,
                p.writer,
                p.replyIdx,
                p.isNotice,
                p.isPrivate,
                p.createAt,
                p.boardView,
                CONCAT(b.x, '-', p.idx) AS x
            FROM
                stn_boards p
            INNER JOIN cte b ON IFNULL(p.replyIdx, 0) = b.idx
        )

        SELECT
            board.idx AS boardIdx,
            board.title AS boardTitle,
            board.article AS boardArticle,
            board.email AS boardWriterEmail,
            COUNT(DISTINCT files.idx) AS fileCount,
            board.writer AS writer,
            board.createAt AS createAt,
            board.isNotice AS isNotice,
            board.isPrivate AS isPrivate,
            IF(DATE_FORMAT(board.createAt, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d'), 1, 0) AS isNewBoard,
            COUNT(DISTINCT comments.idx) AS commentCount,
            board.boardView,
            board.lv AS depth,
            board.replyIdx,
            board.x
        FROM
            cte board
                LEFT JOIN
            stn_files files ON board.idx = files.boardIdx
                LEFT JOIN
            stn_comments comments ON board.idx = comments.boardIdx
        WHERE
        1 = 1
        <if test='"TITLE".equals(searchType)'>
            AND board.title like CONCAT('%',#{content},'%')
        </if>

        <if test='"TITLE_CONTENT".equals(searchType)'>
            AND (board.title like CONCAT('%',#{content},'%')
            OR board.article like CONCAT('%',#{content},'%'))
        </if>

        <if test='"WRITER".equals(searchType)'>
            AND board.writer like CONCAT('%',#{content},'%')
        </if>

        <if test='startDate != null and endDate != null'>
            AND board.createAt between #{startDate} and #{endDate}
        </if>
        GROUP BY
            board.idx,
            board.title,
            board.article,
            board.email,
            board.writer,
            board.createAt,
            board.isNotice,
            board.isPrivate,
            board.boardView,
            board.lv,
            board.X,
            board.replyIdx
        ORDER BY
            SUBSTRING_INDEX(board.X, '|', 1) DESC
           , SUBSTRING_INDEX(board.X, '|', 2)
        LIMIT 10 OFFSET #{offset}
    </select>

    <select id="getBoardCount">
        SELECT
            count(board.idx)
        FROM stn_boards board
        where isNotice = 0
        <if test='"TITLE".equals(searchType)'>
            AND board.title like CONCAT('%',#{content},'%')
        </if>

        <if test='"TITLE_CONTENT".equals(searchType)'>
            AND (board.title like CONCAT('%',#{content},'%')
            OR board.article like CONCAT('%',#{content},'%'))
        </if>

        <if test='"WRITER".equals(searchType)'>
            AND board.writer like CONCAT('%',#{content},'%')
        </if>

        <if test='startDate != null and endDate != null'>
            AND board.createAt between #{startDate} and #{endDate}
        </if>
    </select>


    <select id="getNotice">
        SELECT
            board.idx AS boardIdx,
            board.title AS boardTitle,
            board.article AS boardArticle,
            board.email AS boardWriterEmail,
            COUNT(distinct files.idx) AS fileCount,
            board.writer AS writer,
            board.createAt,
            board.isNotice AS isNotice,
            board.isPrivate AS isPrivate,
            IF(DATE_FORMAT(board.createAt, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d'), 1, 0) AS isNewData,
            COUNT(comments.idx) AS commentCount,
            board.boardView AS boardView,
            1 as depth,
            board.replyIdx
        FROM
            stn_boards board
                LEFT JOIN
            stn_files files ON board.idx = files.boardIdx
                LEFT JOIN
            stn_comments comments ON board.idx = comments.boardIdx
        WHERE
            board.isNotice = 1
        GROUP BY
            board.idx
        ORDER BY
            board.createAt DESC

    </select>

    <select id="getAttachedFileNameByBoardIdx">
        SELECT
            fileName
        FROM stn_files
        where boardIdx = #{boardIdx}

    </select>

    <select id="getBoardDataByBoardIdx">
        SELECT
            board.idx AS boardIdx,
            board.title AS boardTitle,
            board.article AS boardArticle,
            board.email as boardWriterEmail,
            (SELECT count(fileName) from stn_files where boardIdx = board.idx) as fileCount,
            board.writer AS writer,
            board.createAt,
            board.isNotice AS isNotice,
            board.isPrivate AS isPrivate,
            IF(DATE_FORMAT(board.createAt, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d'), 1, 0) AS isNewData,
            0 AS commentCount,
            board.boardView AS boardView,
            1 as depth,
            board.replyIdx
        FROM stn_boards board
        where idx = #{boardIdx}

    </select>

    <select id="getPasswordByBoardIdx">
        SELECT
            password
        FROM stn_boards
        where idx = #{boardIdx}
    </select>

    <delete id="deleteBoard">
        delete from stn_boards where idx = #{boardIdx}
    </delete>


    <update id="updateBoard">
        update stn_boards set
            title = #{title}
            , article = #{article}
            , writer = #{writer}
            , password = #{email}
            , email = #{email}
            , isNotice = #{isNotice}
            , isPrivate = #{isPrivate}
        where
            idx = #{idx}
    </update>

    <update id="updateBoardViewCount">
        update stn_boards set
            boardView = boardView + 1
        where
            idx = #{boardIdx}
    </update>

    <select id="getReplyBoardsByBoardIdx">
        SELECT
            board.idx AS boardIdx,
            board.title AS boardTitle,
            board.article AS boardArticle,
            board.email as boardWriterEmail,
            (SELECT count(fileName) from stn_files where boardIdx = board.idx) as fileCount,
            board.writer AS writer,
            board.createAt,
            board.isNotice AS isNotice,
            board.isPrivate AS isPrivate,
            IF(DATE_FORMAT(board.createAt, '%Y-%m-%d') = DATE_FORMAT(NOW(), '%Y-%m-%d'), 1, 0) AS isNewData,
            0 AS commentCount,
            board.boardView AS boardView,
            1 as depth,
            board.replyIdx
        FROM stn_boards board
        where replyIdx = #{boardIdx}
    </select>

    <delete id="deleteAttachedFileNameByBoardIdx">
        delete from stn_files where boardIdx = #{boardIdx} and fileName = #{fileName}
    </delete>


</mapper>